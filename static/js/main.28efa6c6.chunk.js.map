{"version":3,"sources":["services/FetchPictures.js","images/picture.svg","components/PreviewImage.js","images/pictures.svg","images/linkedin.svg","images/github.png","images/instagram.svg","images/behance.png","Constants.js","components/Footer.js","components/Header.js","components/PicsContainer.js","App.js","reportWebVitals.js","index.js"],"names":["getPictures","org","a","axios","get","response","data","children","picturesList","forEach","dt","picObject","picsData","title","author","thumbnailUrl","thumbnail","thumbnailWidth","thumbnail_width","thumbnailHeight","thumbnail_height","preview","images","pictureUrl","source","url","width","height","push","DialogTitle","withStyles","theme","root","margin","padding","props","classes","onClose","other","disableTypography","className","Typography","variant","IconButton","aria-label","closeButton","onClick","SLCloseBtn","styled","CloseIcon","SLDialogContent","DialogContent","SLImg","img","TextGrid","Grid","TitleDiv","Subdiv","div","PreviewImage","useState","open","setOpen","setdata","useEffect","Dialog","disableEnforceFocus","dialogAction","aria-labelledby","aria-describedby","maxWidth","fullWidth","id","container","item","xl","md","lg","sm","xs","src","decodeURIComponent","Constants","linkedIn","instagram","github","behance","FooterImg","FooterGrid","Footer","style","justifyContent","Tooltip","LinkedIn","window","Github","Instagram","Behance","Heading","span","Header","searchValue","AppBar","position","backgroundColor","Toolbar","value","onChange","newValue","searchCallBack","onCancelSearch","clearSearch","onRequestSearch","val","scaleDown","transitions","ThumbnailContainer","NoImg","NoData","PicsContainer","dataSet","setDataset","setData","previewData","setPreviewData","openDialog","setOpenDialog","getData","pics","filteredArr","toLowerCase","includes","filterResult","length","columnWidth","gutterWidth","gutterHeight","monitorImagesLoaded","appear","appeared","enter","entered","leaved","duration","map","index","Fragment","evt","displayPicture","startsWith","alt","NotFoundImage","NoPic","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28efa6c6.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const getPictures = async (org) => {\n  const response = await axios.get(\n    `http://www.reddit.com/r/pics/.json?raw_json=1&jsonp=`\n  );\n  if (response.data && response.data.data && response.data.data.children) {\n    let picturesList = [];\n\n    //loop through the children to form a single response with only required fields in it\n    //ideally this logic should be handled in express layer or backend API\n    response.data.data.children.forEach((dt) => {\n      let picObject = {};\n      if (dt.data) {\n        let picsData = dt.data;\n        picObject.title = picsData.title;\n        picObject.author = picsData.author;\n        picObject.thumbnailUrl = picsData.thumbnail;\n        picObject.thumbnailWidth = picsData.thumbnail_width;\n        picObject.thumbnailHeight = picsData.thumbnail_height;\n        if (\n          picsData.preview &&\n          picsData.preview.images &&\n          picsData.preview.images[0]\n        ) {\n          picObject.pictureUrl = picsData.preview.images[0].source.url;\n\n          picObject.width = picsData.preview.images[0].source.width;\n          picObject.height = picsData.preview.images[0].source.height;\n\n          picturesList.push(picObject);\n        }\n      }\n    });\n    return picturesList;\n  }\n};\n","export default __webpack_public_path__ + \"static/media/picture.aa58e0e8.svg\";","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport { IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Grid } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: 0,\n  },\n});\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst SLCloseBtn = styled(CloseIcon)`\n  float: right;\n  color: black;\n  cursor: pointer;\n  margin: 8px;\n`;\n\nconst SLDialogContent = styled(DialogContent)`\n  min-height: 60vh;\n  margin: 0px 16px;\n  margin-bottom: 24px;\n`;\nconst SLImg = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nconst TextGrid = styled(Grid)`\n  padding: 16px;\n`;\n\nconst TitleDiv = styled(Grid)`\n  font-size: 24px;\n  font-weight: 600;\n`;\nconst Subdiv = styled.div`\n  margin: 4px 0px;\n`;\nfunction PreviewImage(props) {\n  const [open, setOpen] = useState(props.open);\n  const [data, setdata] = useState(props.data);\n  useEffect(() => {\n    setdata(props.data);\n  }, [props.data]);\n  return (\n    <div>\n      <Dialog\n        disableEnforceFocus={true}\n        open={open}\n        onClose={() => props.dialogAction(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        maxWidth=\"lg\"\n        fullWidth={true}\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          <SLCloseBtn\n            onClick={() => {\n              setOpen(false);\n              props.dialogAction(false);\n            }}\n          >\n            <IconButton />\n          </SLCloseBtn>\n        </DialogTitle>\n\n        <SLDialogContent>\n          <Grid container>\n            <Grid item xl={8} md={8} lg={8} sm={12} xs={12}>\n              <SLImg src={decodeURIComponent(data.pictureUrl)}></SLImg>\n            </Grid>\n\n            <TextGrid item xl={4} md={4} lg={4} sm={12} xs={12}>\n              <TitleDiv>{data.title}</TitleDiv>\n              <Subdiv> Author : {data.author}</Subdiv>\n              <Subdiv> Width : {data.width}</Subdiv>\n              <Subdiv> Height : {data.height}</Subdiv>\n            </TextGrid>\n          </Grid>\n        </SLDialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default PreviewImage;\n","export default __webpack_public_path__ + \"static/media/pictures.7a731a8c.svg\";","export default __webpack_public_path__ + \"static/media/linkedin.7defd339.svg\";","export default __webpack_public_path__ + \"static/media/github.d3263084.png\";","export default __webpack_public_path__ + \"static/media/instagram.d37acdd3.svg\";","export default __webpack_public_path__ + \"static/media/behance.378cdd5e.png\";","export const Constants = {\n  socialMediaUrls: {\n    linkedIn: \"https://www.linkedin.com/in/indushree-m-b-20895192\",\n    instagram: \"https://github.com/indu95\",\n    github: \"https://www.instagram.com/indyartisti/\",\n    behance: \"https://www.behance.net/indushree983ea\",\n  },\n};\n","import styled from \"styled-components\";\nimport { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport LinkedIn from \"../images/linkedin.svg\";\nimport Github from \"../images/github.png\";\nimport Instagram from \"../images/instagram.svg\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Behance from \"../images/behance.png\";\nimport { Constants } from \"../Constants\";\nconst FooterImg = styled.img`\n  width: 18px;\n  margin-left: 8px;\n  cursor: pointer;\n`;\nconst FooterGrid = styled(Grid)`\n  display: flex;\n  align-items: center;\n`;\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <FooterGrid container>\n        <FooterGrid item xs={6} style={{ justifyContent: \"flex-end\" }}>\n          &copy; Created by Indu\n        </FooterGrid>\n        <FooterGrid item xs={6}>\n          <Tooltip title=\"LinkedIn\">\n            <FooterImg\n              src={LinkedIn}\n              onClick={() => {\n                window.open(Constants.socialMediaUrls.linkedIn, \"_blank\");\n              }}\n            ></FooterImg>\n          </Tooltip>\n          <Tooltip title=\"GitHub\" className=\"git\">\n            <FooterImg\n              src={Github}\n              onClick={() => {\n                window.open(Constants.socialMediaUrls.github, \"_blank\");\n              }}\n            ></FooterImg>\n          </Tooltip>\n          <Tooltip\n            title=\"Instagram\"\n            onClick={() => {\n              window.open(Constants.socialMediaUrls.instagram, \"_blank\");\n            }}\n          >\n            <FooterImg src={Instagram}></FooterImg>\n          </Tooltip>\n          <Tooltip\n            title=\"Behance\"\n            onClick={() => {\n              window.open(Constants.socialMediaUrls.behance, \"_blank\");\n            }}\n          >\n            <FooterImg src={Behance}></FooterImg>\n          </Tooltip>\n        </FooterGrid>\n      </FooterGrid>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport SearchBar from \"material-ui-search-bar\";\nimport styled from \"styled-components\";\n\nconst Heading = styled.span`\n  text-align: left;\n  font-size: 24px;\n  padding: 8px;\n  font-weight: 600;\n`;\nfunction Header(props) {\n  const [searchValue] = useState(\"\");\n\n  return (\n    <AppBar position=\"sticky\" style={{ backgroundColor: `black` }}>\n      <Toolbar>\n        <Grid container>\n          <Grid item xl={6} md={6} lg={6} sm={12} xs={12} className=\"pad_16\">\n            <Heading>Pics Browser</Heading>\n          </Grid>\n\n          <Grid item xl={6} md={6} lg={6} sm={12} xs={12} className=\"pad_16\">\n            <SearchBar\n              className=\"search_bar\"\n              value={searchValue}\n              onChange={(newValue) => props.searchCallBack(newValue)}\n              onCancelSearch={() => props.clearSearch()}\n              onRequestSearch={(val) => {\n                props.searchCallBack(searchValue);\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport { getPictures } from \"../services/FetchPictures\";\nimport StackGrid, { transitions } from \"react-stack-grid\";\nimport styled from \"styled-components\";\nimport NotFoundImage from \"../images/picture.svg\";\nimport PreviewDialog from \"./PreviewImage\";\nimport NoPic from \"../images/pictures.svg\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nconst { scaleDown } = transitions;\nconst ThumbnailContainer = styled.span`\n  margin: 8px;\n  padding: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  color: black;\n  width: ${(props) => {\n    return props.width ? props.width + \"px\" : \"150px\";\n  }};\n  height: ${(props) => {\n    return props.height ? props.height + \"px\" : \"150px\";\n  }};\n  border-radius: 8px;\n  cursor: zoom-in;\n  transition: transform 0.2s;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\nconst TitleDiv = styled.div`\n  color: white;\n  font-size: 10px;\n  padding: 0px 8px;\n`;\nconst SLImg = styled.img`\n  width: 100%;\n  height: 100%;\n  cursor: zoom-in;\n`;\nconst NoImg = styled.div`\n  color: black;\n  font-size: 8px;\n`;\n\nconst NoData = styled.div`\n  margin: 0;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  text-align: center;\n  transform: translate(-50%, -50%);\n`;\n\nexport default function PicsContainer(props) {\n  const [dataSet, setDataset] = useState([]);\n  const [picsData, setData] = useState([]);\n  const [previewData, setPreviewData] = useState({});\n  const [openDialog, setOpenDialog] = useState(false);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    let pics = await getPictures();\n    setDataset(pics);\n    setData(pics);\n  };\n  const filterResult = (title) => {\n    let filteredArr = [];\n    dataSet.forEach((item) => {\n      if (item.title.toLowerCase().includes(title.toLowerCase()))\n        filteredArr.push(item);\n    });\n    setData(filteredArr);\n  };\n  const displayPicture = (data) => {\n    setPreviewData(data);\n    setOpenDialog(true);\n  };\n  return (\n    <div>\n      {openDialog ? (\n        <PreviewDialog\n          data={previewData}\n          dialogAction={(dt) => setOpenDialog(dt)}\n          open={true}\n        ></PreviewDialog>\n      ) : null}\n      <Header\n        searchCallBack={(val) => filterResult(val)}\n        clearSearch={() => setData(dataSet)}\n      ></Header>\n\n      {picsData && picsData.length ? (\n        <div className=\"visual-root\">\n          <StackGrid\n            columnWidth={150}\n            gutterWidth={20}\n            gutterHeight={20}\n            monitorImagesLoaded={true}\n            appear={scaleDown.appear}\n            appeared={scaleDown.appeared}\n            enter={scaleDown.enter}\n            entered={scaleDown.entered}\n            leaved={scaleDown.leaved}\n            duration={600}\n          >\n            {picsData.map((data, index) => {\n              return (\n                <React.Fragment key={index}>\n                  <ThumbnailContainer\n                    width={data.thumbnailWidth}\n                    height={data.thumbnailHeight}\n                    onClick={(evt) => displayPicture(data)}\n                  >\n                    {data.thumbnailUrl &&\n                    data.thumbnailUrl.startsWith(\"http\") ? (\n                      <SLImg\n                        src={data.thumbnailUrl}\n                        alt=\"no thumbnail image\"\n                      ></SLImg>\n                    ) : (\n                      <div>\n                        <img\n                          src={NotFoundImage}\n                          alt=\"No thumbnail image found\"\n                        ></img>\n                        <NoImg>No thumbnail found</NoImg>\n                      </div>\n                    )}\n                  </ThumbnailContainer>\n                  <TitleDiv>{data.title}</TitleDiv>\n                </React.Fragment>\n              );\n            })}\n          </StackGrid>\n        </div>\n      ) : (\n        <NoData>\n          <img src={NoPic} style={{ width: `50%` }} alt=\"No data\"></img>\n          <div>No Pics found!! Search by different title</div>\n        </NoData>\n      )}\n\n      <Footer></Footer>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport PicsContainer from \"./components/PicsContainer\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PicsContainer></PicsContainer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}